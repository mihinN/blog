<?xml version="1.0" encoding="utf-8" standalone="yes"?><?xml-stylesheet href="/feed_style.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="https://www.rssboard.org/media-rss">
  <channel>
    <title></title>
    <link>//localhost:1313/</link>
    <description>Recent content on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 05 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="//localhost:1313/index.xml" rel="self" type="application/rss+xml" /><icon>//localhost:1313/img/icon.svg</icon>
    
    
    <item>
      <title>WHOAMI?</title>
      <link>//localhost:1313/whoami/</link>
      <pubDate>Mon, 05 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/whoami/</guid>
      <description><![CDATA[<h3 id="a-passionate-security-researcher-developer-and-a-writer">A passionate security researcher, Developer, and a Writer.</h3>
<p>Hi !! I&rsquo;m Mihin, a 23-year-old Computer Science undergraduate from Sri Lanka.
I am passionate about security research and software development (specially system softwares on Linux/Windows),
and also enjoy expressing my thoughts through writing. Currently,</p>
<p>I am working on my personal projects, which you can explore below.</p>
<ul>
<li>[*] Simple IDS</li>
<li>[*] Scraper for my own use</li>
<li>[*] Simple game engine //</li>
</ul>
<p>These days i&rsquo;m cooking with Rust and hope to learn GO.</p>
<p><img src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEgjwHXZ7V9ma9VVyc9FXypWuhr7UE8jIMRhAwfhMpAobVwDy5Czw5IPUM_omsAys1uC5uA4zPyTvPXKf1upR9aqD_G7q_9Wn2AxJKWxSexF1ra7lRBfSqTLNU3rb3LnVjhpNVbq0G6ogN16gAoTKq61ZTGjc-jlCX3tMem-xnmBIq9fbVq0PKg7ZpcmmlaU/s16000/working-image-2(1).jpeg" alt=""></p>
<p><img src="https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEjSuaxfUXUp1raopRZIwN88D8WXBiE_giP85u8li1Brn6QNLZRKpd55RMREoXsHHpf_25rn_817qiWSeUI2K31ObANMd7z-c1d12RM1igjg-Fl1htYjVu8LODOBOQVyH733kVuxjAqNS_Um1hNE22NDGi_YTyzZylcBf_sZW2R07haKD6175f2bb6wKeJgt/w336-h400-rw/image-11.png" alt="Railey"></p>
<p>Github: <a href="https://github.com/mihinN">mihinN</a></p>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Compilation Process / සිංහල</title>
      <link>//localhost:1313/posts/2023-10-15-compilation-process-in-c/</link>
      <pubDate>Sun, 15 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/posts/2023-10-15-compilation-process-in-c/</guid>
      <description><![CDATA[<h2 id="c-compilation-process-එක">&ldquo;C&rdquo; compilation Process එක,</h2>
<p>කලින් ලිපියේ සදහන් කළා ඔයාලට මතක ඇති , අපි ලියපු programme එක compile කර ගැනීමේදී , ඒ compilation process එක steps කීපෙකට වෙන බව , ඉතින් අද අපි ඒ steps කීපය ගැන බලන්න තමයි යන්නේ . ඊට කලින් කවුරු හරි මේ ලිපියෙන් කියවන්න පටන් ගත්ත නම් ඒ අය සදහා මම පොඩි ආරම්බයක් විදියට අයෙත් මේ පොඩි විස්තරෙකින්ම පටන් ගන්නම් .</p>
<p>සරලවම , අපි compiler එකක් බාවිතයට ගන්නේ අපි ලියන programme  එක machine code එක බවට convert කර ගැනීමට , මොකද පරිගණකයට තේරෙන්නේ 0,1 එහෙමත් නැත්නම් binaries නිසා , ඉතින් විවිද පරිගණක බාෂා ඒ ඒ බාශාවන්ට ගැලපෙන්න compilers නිර්මාණය කරලා තියෙනවා .</p>
<p>ඉතින් අපේ කතාව සිද්ද වෙන්නේ C බාශාවත් එක්ක නිසා gcc එහෙමත් නැත්නම් GNU C Compiler එක තමයි බාවිතයට ගන්නේ . ඉතින්  gcc compiler එක C පරිගණක බාශාවේ වගේම C++ සදහාත් බාවිතා වෙනවා . ඊට අමතරව Go වගේ language වලත් ඒ සදහා වන compiler නිර්මාණයේදී යොදා ගෙන තිබෙනවා .</p>
<p>හරි මම හිතවා ආරම්බය විදියට මේ විස්තර ටික ඇති කියල , දැන් බලමු මොනවද මේ steps ටික කියල ,
C වල compilation process  එක steps 4කට සිද්ද වෙනවා , ඒ කියන්නේ ඔයා programme එක ලියල , gcc -o first first.c enter ගැහුව
ගමන් gcc programme එක, ඔයා ලිව්ව programme එක steps හතරක් හරහා ගෙනල්ලා තමයි ඔයා දකින ./first කියන executable file එක create කරන්නේ .</p>
<p>ඉතින් මොකක්ද මේ හතර ?
පිලිවෙලින් ,</p>
<ol>
<li>Pre-processing</li>
<li>Compiling</li>
<li>Assembling</li>
<li>Linking</li>
</ol>
<p>පලවෙනි එක තමයි <code>pre-processing part</code> එක , මෙතැනදී compiler එකෙන් ඔයාගේ programme එකේ තියෙන <strong>header fles , macros ටික extract කර ගන්නවා</strong> .  ඉතින් මේක ඔයාටම බලා ගන්න පුළුවන් , ඔයාට තියෙන්නේ compiler එකට කියන්න compilation process එක pre-processing part එකෙන් පමණක් නවත්වන්න කියල , මේක කරන්නේ කොහොමද , හරි සරලයි ,
gcc  -o විදියට සදහන් කල flag (අපි මේවට flags කියල කියනවා) එක වෙනුවට <code>gcc -E</code> <strong>flag</strong> එක යොදා ගෙන compile කරලා බලමු .  ඔයාලට output එක බලාගන්න පුළුවන් මේ විදියට ,</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>gcc -E first.c
</span></span></code></pre></div><p>මේක පැහැදිලි වෙන්න මේ ටික text file එකක save කර ගමු මේ විදියට .</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>gcc -E first.c &gt; first-pre.txt
</span></span></code></pre></div><p>text file එක open කර ගත්තට පස්සේ , ඔයාලටම බලා ගන්න පුළුවන් අපේ header files extraxt වෙලා තියෙන අපූරුව ✅✅</p>
<p>දැන් ඔයාල සාර්ථක ලෙස එකක් ඉවරයි , ඊළඟට <code>compilation part</code> එක , මෙතනදී වෙන්නේ <strong>ඔයා extract කර ගත්තු code</strong> එක <code>assembly language එකට convert වෙන එක</code> , assembly කියන්නේ <strong>low -level language</strong> එකක් <strong>machine code එකට සමීප</strong> , ඒ කලේ programmes බොහොමයක් ලියවුනේ මේ බාශාවෙන්. ඉතින් මේ වැඩේ අපිට කරන්න පුළුවන් කලින් වගේ gcc වලට <code>-S</code> කියන flag එක ලබා දීමෙන් , ඒවගේම .s කියන file type එකෙන් output එක ගන්න පුළුවන් .</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>gcc -S first.s first.c
</span></span></code></pre></div><p>දැන් ඔයාලට බලා ගන්න පුළුවන් assembly code එක.
ඊළඟ step එක තමයි මේ assembly code  එක binaries වලට convert කර ගන්න එක ,  මේකට අපි -c flag එක යොදා ගන්නවා.
<strong>ENTER</strong> කල ගමන් අපිට first .o object file එක create වෙලා තියෙනවා ..</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>gcc -c first.s
</span></span></code></pre></div><p>මෙතනදී compiler එකෙන් warnings එහෙම දෙන්න පුළුවන් linking part එක වෙලා නැහැ කියල , අපි ඉතින් දන්නවා නේ තව step එකක් තියෙනවා කියල අන්තිම stage එකට එන්න.</p>
<p>හරි .. ඉතාමත් සාර්ථක අකාරයෙන් මේ ටික අවසන් කල ඔයා , ඊළඟට යන්නේ මේක compile කරලා අවසාන කර ගන්න. ඉතින් එකට අපි -o flag එක යොදා ගෙන,
පහත ආකාරයට compile කරලා අවසාන කරනවා ,</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>gcc -o first first.o
</span></span></code></pre></div><p>ඉතින් මෙතනදී වෙන්නේ Linking part එක , ඔයාගේ programme එකට අවශ්‍ය libraries තියෙනවා නම්, ඒ binaries සහ ඔයාගේ programme එකේ binaries එකට එකතු කිරීමක් තමයි මෙතනදී  වෙන්නේ.</p>
<p>තව විස්තර ඇතුව කිව්වොත් ,</p>
<p>අපි programme එකක් ලියද්දි , ඒ සදහා libraries එහෙමත් නැත්නම් header files කිහිපයක් යොදා ගන්නවා , ඒ වගේම system එකෙන් ලබා දෙන libraries  වලට අමතර අපිම ලියන , අපිට අවශ්‍ය පරිදි customize  කල libraries  අපිට යොදා ගන්න වෙනවා , අන්න එතනදී මේ linking part එකේ වැදගත් කම හොදටම දැනෙනවා</p>
<p>හරි , මේක තමයි compilation process එකේ කතාව , අදට නිමි එහෙනම්, ජයවේවා &hellip;..!! 🤍</p>
]]></description>
      
        <media:thumbnail url="https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/f239c046-c6e3-4e6d-a9d7-3c189be515d1/dgv260v-cf3ad109-df5f-4263-9245-81aa8bb5cf78.jpg/v1/fill/w_1014,h_788,q_70,strp/italian_connection_iii_by_luopioart_dgv260v-pre.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7ImhlaWdodCI6Ijw9OTk1IiwicGF0aCI6IlwvZlwvZjIzOWMwNDYtYzZlMy00ZTZkLWE5ZDctM2MxODliZTUxNWQxXC9kZ3YyNjB2LWNmM2FkMTA5LWRmNWYtNDI2My05MjQ1LTgxYWE4YmI1Y2Y3OC5qcGciLCJ3aWR0aCI6Ijw9MTI4MCJ9XV0sImF1ZCI6WyJ1cm46c2VydmljZTppbWFnZS5vcGVyYXRpb25zIl19.gdGPY2zHhz15o7mlqI4vVyyGtWhvNDNGE4D0bDOAzsk" />
      
    </item>
    
    
    
    <item>
      <title>Hello World! Programme / සිංහල</title>
      <link>//localhost:1313/posts/2023-10-10-hello-world-in-c-language/</link>
      <pubDate>Tue, 10 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/posts/2023-10-10-hello-world-in-c-language/</guid>
      <description><![CDATA[<h2 id="පලවන-programme-එක-ලයම">පලවෙනි programme එක ලියමු,</h2>
<p>අද තමයි මේකේ දෙවැනි කොටස , ඔක්තෝබර් පළවෙනිදා  පට්ට වැස්සක් අතරේ ලියන්නේ 🌧️🌧️ , කලින් ලිපියෙන් පොඩි හැදින්වීමක් සිදු කලේ , මොකද කාට හරි හිතෙන්න පුළුවන් මේ කාලෙට C වගේ පරිගණක බාශාවක් ඉගෙන ගන්න එකේ ප්‍රයෝජනයක් තියේද , ඒ කාලය වෙන වැඩකට allocate කලොත් නරකද වගේ දේවල් හිතෙන්න පුළුවන් , ඉතින් ඒ වගේ ගතියක් තිබ්බ නම් මීට පෙර ලිපිය කියෙව්වම මම හිතනවා අඩු වෙන්න ඇති කියල 😉</p>
<p>හරි දැන් අපි වැඩේට බහිමු , මම හිතනවා  මේක කියවන ඔබ මොනවා හරි  Linux based Os එකට හෝ  WSL වලට වගේ   මාරු වෙලා ඇති කියල , වැඩි කතා  අනවශ්‍යයි අපි c වලින් සරල programm එකක් ලියල බලමු ,</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;stdio.h&gt;</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>(<span style="color:#66d9ef">void</span>){
</span></span><span style="display:flex;"><span><span style="color:#a6e22e">printf</span>(<span style="color:#e6db74">&#34;Hello world!&#34;</span>);
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>දැන් ඔයා ලග තියෙන මොනම හරි text editor (Sublimetext , VScode  , Notepad ++ , vim  , emacs ) එකක් Open  කරලා
උඩ දාල තියෙන code එක type කරන්න.</p>
<p>(මෙතැනදී IDE  එකක් බාවිතා කරන්න පුළුවන් , හැබැයි code suggestions , build tools නැතුව අමුවෙන්ම code කරන එක , ඉගෙන ගන්න time එකේ හොදයි කියල හිතනවා .)  ඊළඟට ලියා ගත්ත code එක .c  කියන extension එකෙන් save කර ගන්න මොකද මේ අපි දැන් create කර ගන්නේ C File  එකක් නිසා .</p>
<p>හරි , අපි සාර්ථක ලෙස code එක ලියා ගත්තට පස්සේ , ඊළඟට අපි  ලියපු programme එක Compile  කර ගන්න ඕන , ඉතින් මේ <code>compile කරනවා කියන්නේ මොකක්ද ?? compile කරන්නේ මොකෙන්ද ?? compile කරද්දී මොකක්ද වෙන්නේ ??</code> මේ වගේ දේවල් ඔලුවට එන්න පුළුවන් , ඉතින් අපි ඒ දේවල් එකින් එක බලමු .</p>
<p>අපි programme එකක් ලියද්දි අපේ පහසුවට ඉංග්‍රීසි බාෂාව තමයි බාවිතා කරන්නේ , ඉංග්‍රීසි බාෂවත් එක්ක විවිද ගණිතමය සංකේත සහ logical symbols නුත් බාවිතය ගන්නවා සාර්ථක programme එකක් ලියා අවසන් කර ගන්න .</p>
<p>හැබැයි මේ අපි බාවිතා කරන බාශාව පරිගනයකයට තේරෙනවද ?? මේ තියෙන hardware වලට තේරෙනවද ??</p>
<p>කොහෙත්ම  තේරෙන්නේ  නැහැ  ..</p>
<p>පරිගණකය තේරෙන්නේ  Binaries එහෙමත් නැත්නම 0 සහ 1 විතරයි . ඉතින් මේ අපිට තේරෙන බාෂාවෙන් ලිව්ව programme එක පරිගණකයට තේරෙන්න convert කිරීමේ කාර්ය පැවරිලා තියෙන්නේ Compiler එකට .</p>
<p>ඔබ නිකමට google කරලා බැලුවොත් මේ වෙනකොට විවද පරිගණක බාෂාවන් සදහා ඊට අදාලව තියෙන compilers බලා ගන්න පුළුවන් , එකම පරිගණක බාශාවට විවිද නම් වලින් compilers බාවිත වෙනවා දකින්නත් පුළුවන් , හැබැයි පරිගණක බාෂාවට අනුව මොන විදියේ architecture එකකට නිර්මාණය කල Compiler එකක් උනත් අවසානයේ සිදු කරන්නේ ඔයා ලියපු programme එක binaries වලට convert කරන එක තමයි.</p>
<p>හරි , දැන් අපිට compile කරනවා කියන එක තේරෙනවා , ඊළඟට අපි ලියපු code එක compile කරගෙන බලමු , ඉතින් මේකට අපි ගන්නේ gcc කියන compiler එක , මේක c language එකට වගේම c ++ වලටත් යොදා ගන්නවා .</p>
<p>මුලින්ම , ඔයාගේ පරිගණකයේ gcc  තියේද  කියල බලල එහෙම නැත්නම්  install කර ගන්න ඕන .</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>gcc --version
</span></span></code></pre></div><p>මේක ගහල enter කලාට පස්සේ මෙහෙම display  වෙනවා නම් , ඔයාගේ machine එකේ මේ වෙනකොට compiler එක තියෙනවා .</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>gcc <span style="color:#f92672">(</span>Ubuntu 11.4.0-1ubuntu1~22.04<span style="color:#f92672">)</span> 11.4.0
</span></span><span style="display:flex;"><span>Copyright <span style="color:#f92672">(</span>C<span style="color:#f92672">)</span> <span style="color:#ae81ff">2021</span> Free Software Foundation, Inc.
</span></span><span style="display:flex;"><span>This is free software; see the source <span style="color:#66d9ef">for</span> copying conditions.  There is NO
</span></span><span style="display:flex;"><span>warranty; not even <span style="color:#66d9ef">for</span> MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
</span></span></code></pre></div><h3 id="එහම-නතනම">එහෙම නැත්නම්,</h3>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>sudo apt update 
</span></span><span style="display:flex;"><span>sudo apt install gcc  
</span></span></code></pre></div><p>මේ විදියට type කරලා install කර ගන්න පුළුවන් ..</p>
<p>ඉතින් මෙතනදී ඔයාලට තේරෙනවා මේකත් එක computer programme එකක් කියල , ඒ වගේම තමයි අපි compile කරන්න මේ programme එකට දෙන files steps කීපයක් හරහා ගිහිල්ල තමයි අවසානයේ පරිගණකයට තේරෙන executable binary file එකක් බවට convert වෙන්නේ . සරලවම මේ compilation process එක steps කීපෙකට තමයි සිද්ද වෙන්නේ . ( ඒක ගැන මම වෙනම ලිපියක් දාන්නම් )</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>gcc -o first first.c
</span></span></code></pre></div><p>දැන් මේක ගැන කතා කරා ඇති , compile කරමු ,
උඩ තියෙන විදියට type කරලා enter කරන්න , කිසිම case එකක් නැතුව compile වෙලා ඉවර වෙනවා කියන්නේ ඔයා පලවෙනි programme එක හරියට ලියල compile  කරලා අවසානයි කියන එක . දැන් output එක විදියට first කියල binnary file එකක් create වෙලා ඇති  . මේක open කරලා බැලුවම මේකේ symbols වගයක් පෙන්න පුළුවන් .</p>
<p>ඊළඟට මේක run  කරලා  බලමු මේ ආකාරයට,</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-shell" data-lang="shell"><span style="display:flex;"><span>./first
</span></span></code></pre></div><p>දැන් අපි සාර්ථක ලෙස , අපේ පලවෙනි programme එක ලියල run කරලා  අවසානයි. අපි දැන් බලමු එකින් එකට code එකේ තියෙන syntax සහ ඒවගෙ තේරුම.</p>
<p>ඔයාල ට මුලින්ම බලා ගන්න පුළුවන් <code>#include&lt;stdio.h&gt;</code> කියන syntax එක ,</p>
<p>මේකේ මුලින්ම තියෙන්නේ  <code>#</code> symbol එක , ඉතින් c language එකේ මේ symbol එක යොදා ගන්නේ programme එකට යම් කිසි pre-processing part එකක් එකතු කරන්න . දැනට pre-processing කියන්නේ , ඔයාලට මතක ඇති compilation process එක steps කීපෙකට වෙනවා කියල කලින් කිව්වනේ, අන්න ඒ එක අවස්තාවක තමයි pre-processing කියන සිද්දිය වෙන්නේ .</p>
<p>ඊළඟට අපි include යොදා ගත්ත , මොකද අපිට stdio කියන header file එක add කර ගන්න ඕන නිසා .</p>
<p>ඉතින් මේ මුල තියෙන #include එක use කරන්නේ  අපිට code කරන් යද්දී , අපේ පහසුවට මොනවා හරි function එකක් call කලොත් අන්න ඒ function එකට අදාළ source code එක load කර ගැනීමක් තමයි මේ &quot; #include &quot; syntax එක බාවිතයෙන් වෙන්නේ , දැන් මෙතැනදී අපි stdio කියන header file එක බාවිතයට අර ගෙන තියෙනවා . එතකොට මොකක්ද මේ header file එකක් කියල කියන්නේ . මම කලින් සදහන් කල නේ , අපි code කරන යද්දී අපිට සමහර functions, macros වගේම data structures නුත් use කරන්න වෙනවා  අපේ පහසුව උදෙසා.</p>
<p>(macros ගැන මම ඉස්සරහට කියනවා  , data structures කියල කියන්නේ සරලව , අපිට programme එකේ data store කරන්න වගේම execute කරද්දීත් computer එකේ main memory එක ඕන වෙනවා නේ , ඉතින් මේ data structures use කරන්න memory එකේ data කාර්යක්ෂමව store කරන්න සහ access කර ගන්න-: මේවා ගැන ඉදිරියට සවිස්තර කතා කරනවා)</p>
<p>කාටහරි ප්‍රශ්නයක් එන්න පුළුවන් ඉතින් අපිට මේවා ලියන්න පුළුවන් නේ කියල , ඔව් ලියන්න පුළුවන් , හැබැයි එක  අනවශ්‍ය විදියේ වෙලාව යන දෙයක් වෙන්න පුළුවන් enterprise level එකේදී , ඒ වගේම මේ libraries එහෙමත් නැත්නම් header files ඒ ඒ අදාළ engineers ල ලියල තියෙන්නේ ගොඩක් හිතල vulnerabilities උපරිම අඩු වෙන විදියට සහ උපරිම පලදායිතාවය ලබා  ගන්න පුළුවන් අකාරයට . එහෙම එකේ අපි අයේ ලියන්න ඕන කමක් නැහැ  (හැබැයි ඉගෙන  කාලේ වෙලාව තියෙනවා නම් Wheel එක අලුතෙන් invent කලාට කමක් නෑ ).</p>
<p>ඉතින් දැන් අපේ code එකේ හැටියට , අපි stdio.h කියන header file එක add කර ගෙන තියෙන්නේ . දැන් අපි මේ standard input output header file එකේ තියෙන  variables , functions prototypes බාවිත කරන්න පුළුවන් හිතේ හැටියට.</p>
<p>ඒ වගේමයි මේ stdio හෝ අනෙක් file එක වගේම system එකෙන් ලබා  දෙන header files අපිට කියවා ගන්න පුළුවන් , MS code text-Editor එකේනම් right click කරලා  header file එකේ text එක click කරලා goto definition දුන්නම බල ගන්න පුළුවන් අදාළ header file එකේ code එක , එහෙම නැත්නම් /usr/include directory එකට ගියාමත් අපිට OS එකෙන් ලබා දෙන header files ටික බල ගන්න පුළුවන් .</p>
<p>හරි දැන් ඊළඟට තියෙන්නේ  main function එක , මෙතන අපිට අවශ්‍ය  algorithms  ලියනවා වගේම , අපිට අවශ්‍ය functions call  කර ගන්න පුළුවන් . කලින් ඔයාල ලියපු programme එකෙත් printf(); function එක යොදා  ගෙන තියෙනවා  පේනවා. main function එකත් අනීත් functions වගේම තමයි, අපි function එකක් create  කර ගන්නකොට යොදා ගන්න පිළිවෙලවල් මේකෙත් තියෙනවා,</p>
<p><code>&lt;function එකේ return type එක&gt; &lt;function name එක&gt; ()</code> ඇතුලේ අපිට data share කර ගන්න පුළුවන් වගේම , අපි මේවට කියනවා  arguments කියල , උදාහරණෙ හැටියට නම් මෙතන void දල තියෙන්නේ , එතනට void නොදා  ලිව්වත් කමක් නැහැ  , හැබැයි එහෙම දාල ලියන එකෙන් compiler එක සතුටු වෙනවා . ඊළඟට return එක , මෙතන return එක 0 දීල තියෙන්නේ එකට හේතුව තමයි අපේ programme එක නිවැරදිව run උනා  නම් return කරන්නේ 0 ,  0 හැර වෙන මොනවා  හරි return කරනවා  නම් code එකේ කොතැනම හරි ප්‍රශ්නයක් තියෙන්නව . මේක බලන්න පුළුවන් , ඔයාලගේ terminal එකේ echo $? ට්ය්පේ කරලා , 0 return වෙනවා  කියන්නේ programme එක successfully run  වෙලා කියන එක.</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;stdio.h&gt;</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>()
</span></span><span style="display:flex;"><span>{
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> str;
</span></span><span style="display:flex;"><span>    str <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;GfG&#34;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#f92672">*</span>(str <span style="color:#f92672">+</span> <span style="color:#ae81ff">1</span>) <span style="color:#f92672">=</span> <span style="color:#e6db74">&#39;n&#39;</span>;
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>මේක fault එකක් තියෙන code එකක්. උදාහරණයක් විදියට මේක second.c කියල save කරලා  , compile කරලා Run කරමු , මෙන්න Run කලාම segmentation fault එකක් වැටෙනවා.හැබැයි බැලූ බැල්මට code එකේ වැරැද්දකුත් නැහැ නේද ?? (Compiler එක ගොඩක් වෙලාවට warnings දෙන්න පුළුවන්.)(මේ error එක ගැනත් අපි ඉස්සරහට කතා කරමු), දැන් කලින් කිව්වා  වගේ  echo  $? ගැහුවම return වෙන්නේ 0 නෙවේ , අන්න එකෙන් අදහසක් ගන්න පුළුවන් return 0 ගැන .</p>
<p>අදට මේ ලිපියෙන් මෙපමණයි ඉතින් , ඊළඟ එකෙන් සමුවෙමු ! ජයවේවා !</p>
]]></description>
      
        <media:thumbnail url="https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/15102441-2d8e-4af8-a431-0d409e866e20/d9osclx-5ffc445c-5296-4370-92ce-dd6781e70c79.jpg/v1/fill/w_1024,h_655,q_75,strp/hidden_sanctuary_by_cristi_b_d9osclx-fullview.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7ImhlaWdodCI6Ijw9NjU1IiwicGF0aCI6IlwvZlwvMTUxMDI0NDEtMmQ4ZS00YWY4LWE0MzEtMGQ0MDllODY2ZTIwXC9kOW9zY2x4LTVmZmM0NDVjLTUyOTYtNDM3MC05MmNlLWRkNjc4MWU3MGM3OS5qcGciLCJ3aWR0aCI6Ijw9MTAyNCJ9XV0sImF1ZCI6WyJ1cm46c2VydmljZTppbWFnZS5vcGVyYXRpb25zIl19.CdLNeFqqSQ5QPtzlf0KaJ29qReB0PzdcDa4YByV21G8" />
      
    </item>
    
    
    
    <item>
      <title>Getting started in C / සිංහල</title>
      <link>//localhost:1313/posts/2023-09-11-c-language-sinhalen-first_lesson/</link>
      <pubDate>Mon, 11 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/posts/2023-09-11-c-language-sinhalen-first_lesson/</guid>
      <description><![CDATA[<p><strong>&ldquo;C&rdquo;</strong> පාඩම් මාලාව පටන් ගන්න කලින් , මට නිකමට ලිපියක් ලියල  දාන්න හිතුන , ඇයි ඇත්තටම මේ (C) පරිගණක බාශාවම  ලිපි ටිකක් විදියට දාන්න හිතුනේ කියන එක ගැන. මේකෙදි අපිට C වල අතීත කතාව නොකිය ඉන්නම බැහැ , මොකද සරලවම C language එක බාවිතයට් ගෙන  තමයි අද අපි බාවිතා කරන Operating Systems , ඒ වගේම device drivers , network හා සම්බන්ද applications , Embedded Systems සහ Databases වැනි බොහොමයක් ලියල තියෙන්නේ .
ඉතින් 1972 දී , Dennis Richie මහතා  Bell labs සමග වැඩ කරන කාලේ තමයි C language එක නිර්මාණය කරන්නේ , මෙතැනදී කියන්න ඕන අපි දැනට බාවිතා  කරන technology හා  සම්බන්ද    දේවල් බොහොමයකට ආරම්බය  වෙලා  තියෙන්නේ bell labs සහ එහි සිටිය set එකේ පරිශ්‍රමය මත 🧙‍♂️ .. හරි දැනට දල අදහසක් තියෙනවා  නේ අපි මේ code කරන්න බාවිත කරන බාශාව ගැන .. !
ඒවගේම දෙයක් තියෙනවා  C බාෂාව තවත් විශේෂ වෙන , ඒ තමයි C වලට හැකියාව පවතිනවා  Directly memory එක Access කරන්න , මේ දේ නිසා  අපිට Data structures ලියද්දි සහ අලුත් ඒවා  නිර්මාණය කරද්දී වටිනවා  .. අපි අනිවාර්යෙන්ම මේ සම්බන්දව Pointers ගැන කතා  කරනකොට , කතාකරමු .</p>
<p><img src="http://2.bp.blogspot.com/-9b8ZD8nw9cE/UZfxNrVi09I/AAAAAAAABlc/KEOcnLhPbpQ/s1600/DennisRichie.jpg" alt="Dennis Richie" title="Dennis Richie"></p>
<p>දැන් code කරන්න වෙලාව හරි , මේකට අපිට CodeBLocks වගේ IDE එකක් යොදා  ගන්න පුළුවන් , නැත්නම් හොදම විදිය කියල මම හිතන්නේ Old School විදියට text editor එකේ type කරලා  compiler එකක් use කර ගෙන compile කර ගන්න එක . ( ඇත්තටම text editor එක බාවිත කරලා  ඉගෙන ගන්න වෙලාවේ code කරන එක මම පුද්ගලිකව හිතනවා හොදයි කියල , under the hood වෙන දේවල් ඉගෙන ගන්න පුළුවන් මේ විදියෙන් , හැබැයි ලොකු systems මේ විදියට ලියන්නේ නැහැ  ) , අනෙක් දේ තමයි Operating system එක , අපිට කැමති එකක ලියන්න පුළුවන් , හැබැයි Windows / Mac වලට වඩා  මේක ඉගෙන ගන්න වේලාවෙ මොනවා  හරි Linux/Unix based OS එකක ලියන එක වටිනවා  , එකට හේතුව තමයි windows සහ Mac වල restrictions වැඩි , ඒ වගේම අපිට c එක්ක ඉදිරියට වැඩ කරද්දී සමහර system calls එහෙම programme ඇතුලේ call කරන්න වෙනවා , අන්න එනත්නදී ගැටළු එන්න පුළුවන් . ( මෙතැනදී OS එක විදියට Ubuntu බාවිතා  කරනවානම් හොදයි , මොකද එක්තරා  විදියකට පහසුයි බාවිතා  කරන්නත් 😉) .(<a href="https://www.youtube.com/results?search_query=how+to+install+ubuntu+on+virtualbox">Ubuntu , Virtual machine එකක install කරන අකාරය මෙතනින් බලන්න </a>)</p>
<p>හරි දැන් අපි දැන් C වල අතීත විත්ති ටිකකුත් දැන ගෙන , ගැලපෙන Os එකකුත් දාගෙන ඉන්න අතරේ, ඊළඟට මේ වැඩේට අවශ්‍ය මොකක්ද කියන එක අපි බලන්න ඕන , ඔව් .. ඊළඟට ඕන compiler එකක් , compiler එක කියන්නෙත් එක්තරා  ආකාරයක application එකක්, මේක බාවිතයට ගන්නේ අපි High level language එකක් බාවිතා  කරලා  ලියන programme එක machine code එක බවට පරිවර්තනය කර ගන්න .  ඉතින් මෙතැනදී අපි gcc compiler එක යොදා  ගන්නවා  අපේ c programme එක compile කර ගන්න (මෙතනදී ඔයාලට වෙන compiler එකක් යොදා  ගන්නත් පුළුවන් , පොඩි research එකක්  දාල කරන්න බලන්න ඒක).</p>
<p>ඉතින් , අදට මම මේ ලිපිය මෙතැනින් ඉවර කරනවා  , ඊළඟ ලිපියේ අපි compiler එක install කරලා  code කරන්න පටන් ගමු (Ubuntu වල gcc එකනම් inbuild එනවා  , අපි clang වගේ එකකුත් test කරලා  බලමු ) , එහෙනම්<br>
ජයවේවා !</p>
]]></description>
      
        <media:thumbnail url="https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/3a029f5b-07fb-4df6-a114-9ecf9f56f66c/dg8i3u5-e90bc730-f6eb-4ae8-b63f-73c05dda544b.jpg/v1/fill/w_1194,h_669,q_70,strp/dwarven_workshop_by_bouzuki_dg8i3u5-pre.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7ImhlaWdodCI6Ijw9NzE4IiwicGF0aCI6IlwvZlwvM2EwMjlmNWItMDdmYi00ZGY2LWExMTQtOWVjZjlmNTZmNjZjXC9kZzhpM3U1LWU5MGJjNzMwLWY2ZWItNGFlOC1iNjNmLTczYzA1ZGRhNTQ0Yi5qcGciLCJ3aWR0aCI6Ijw9MTI4MCJ9XV0sImF1ZCI6WyJ1cm46c2VydmljZTppbWFnZS5vcGVyYXRpb25zIl19.Z5b9zTsoQJIu0NKLtMFV_tQxupoukn1AlU0CfngvXJQ" />
      
    </item>
    
    
    
    <item>
      <title>C Lessons List / සිංහල</title>
      <link>//localhost:1313/c_tuts/</link>
      <pubDate>Fri, 24 Feb 2023 17:51:42 +0000</pubDate>
      
      <guid>//localhost:1313/c_tuts/</guid>
      <description><![CDATA[<table>
<thead>
<tr>
<th>List</th>
<th>Info</th>
</tr>
</thead>
<tbody>
<tr>
<td><em>🍃 <a href="https://mihinn.github.io/blog/posts/2023-09-11-c-language-sinhalen-first_lesson/">Getting started in C / සිංහල</a></em></td>
<td><code>ආරම්බය </code></td>
</tr>
<tr>
<td><em>🍃 <a href="https://mihinn.github.io/blog/posts/2023-04-17-ids_research/">පළමු කොටස</a></em></td>
<td><code>simple programme එකක් ලිවීම</code> <code>Syntax හැදින්වීම</code> <code>Compilation  process  එක හැදින්වීම</code></td>
</tr>
<tr>
<td><em>🍃 <a href="https://mihinn.github.io/blog/posts/2022-11-12-structs-in-c-language-sinhala/">Structs in C language</a></em></td>
<td><code>Structs සහ User Define data types ගැන හැදින්වීම</code></td>
</tr>
</tbody>
</table>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Structs in C language / සිංහල</title>
      <link>//localhost:1313/posts/2022-11-12-structs-in-c-language-sinhala/</link>
      <pubDate>Sat, 12 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/posts/2022-11-12-structs-in-c-language-sinhala/</guid>
      <description><![CDATA[<h2 id="structs--ගන-">Structs  ගැන ,</h2>
<p>Structs , C language එකේ විශේෂ ස්ථානයක් ගන්නවා , එයට හේතුව  , අපි දන්නවා  අපිට programme එක තුල අවශ්‍ය දෙයක් computer memory එකේ තබා ගැනීමට අවශ්‍ය වූ විට සිදු කරන්නේ , variable එකක් create කරන එක. උදාහරණයක් විදියට ගත්තොත් ..</p>
<p><code>int x=20 , y=30;</code> ආකාරයට .
struct තුලින් කරන්නෙත් මේ හා සමාන ක්‍රියාවලියක් (ඒ කියන්නේ memory එකට acces කිරීමක්) . හැබැයි මෙහි වෙනස් කමක් දක්නට පුළුවන්, ඒ .. අපි variable එකක් create කරනකොට බාවිතා කරනවා data types කියලා ජාතියක් . int ,char ,short ,float ,long , double කියලා Data-types set එකක් අපි දැනටමත් දන්නවා , මේවට අපි කියනව pre-define data-types කියල, මොකද මේවා නිකන් standards වගේ එදා ඉදලා තිබ්බ දේවල් .</p>
<p>හැබැයි structs නිර්මාණය කරලා තියෙන්නේ , මේ Pre-define data types සමග බැදුණු varible කිහිපයක් එක් කරගෙන අපිට නව data type එකක් නිර්ම්මාණය කර ගතහැකි අකාරයටයි. අර සෙට් එක bundle කරලා එකක් නිර්මාණය කර ගැනීමක් තමයි සිද්ද වෙන්නේ ,  අන්න ඒ හේතුව නිසා අපි structs කියන්නේ User-define data type එකක් විදියට සලකනවා .</p>
<p>අපි උදාහරණයක් අරන් බලමු ,</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;stdio.h&gt;</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>(){
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>name; <span style="color:#75715e">// pointer variable එකක් use කල එකට confused වෙන්න එපා , ඒ කොටසෙන් කියනවා 
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">char</span> <span style="color:#f92672">*</span>district;
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> student_count;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>👆 ඉහත දක්වල තියෙන විදියට තමයි අපි normally code කරන්නේ  👆</p>
<p>හරි දැන් බලමු , අපි structs බාවිත කරමින් මේ සිදු කරන්නේ කොහොමද කියල ..</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;stdio.h&gt;</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">struct</span> schools{
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> name;
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> district;
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">int</span> student_count;	
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>(){
</span></span><span style="display:flex;"><span>	
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>මේක අපි ලියද්දි Global scope එකෙන් ලියන්නේ ( main එක උඩින්  ලියන්නේ) , එම නිසා globaly available වෙනවා නිකන්ම.
ඒවගේම තමයි මම කලින් කිව්වා වගේ ඔක්කොම bundle කරලා එකකට ගෙනාවට පස්සේ අලුතින් මේ නිර්මාණය වුනේ data type එකක් ( එය User-define data type එකක් කියලත් හදුන්වනවා ), ඉහත උදාහරණයට අනුව , මේකේ Data-type  එක වෙන්නේ struct school කියන එක
<strong><code>🤠  // Data-type එක මොකක්ද කියලා ඇහුවොත් නිකන් school නෙවේ , struct school . 🤠</code></strong></p>
<p>හරි දැන් Data-type එක නිර්මාණය කර ගෙන අවසානයි.
දැන් තියෙන්නේ අපිට මේකෙන් ප්‍රයෝජනයක් ගන්න , අපිට මෙය main එකට call කර ගන්න වෙනවා , එහෙමත් නැත්නම් අපි මේ අවස්තාවට කියනවා struct එකක් declare කරනව කියලා , නැතිනම් initialize කරනවා යනුවෙනුත් හදුන්වන්න පුළුවන්.
struct එක declare කරන්නේ මෙහෙමයි ,</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;stdio.h&gt;</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">struct</span> schools{
</span></span><span style="display:flex;"><span>   <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> name;
</span></span><span style="display:flex;"><span>   <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> district;
</span></span><span style="display:flex;"><span>   <span style="color:#66d9ef">int</span> student_count;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>(){
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">struct</span> schools f_school;
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>මේ ආකාරයට declare කර ගත්ත variable එක තවම initialize කළා කියන තැනට ඇවිල්ල නැහැ , එකට හේතුව අපි කිසිම Data එකක් දීල නැති එක ,
මෙන්න මේ ආකාරයට data අපි create කල variable එකට දෙමු &hellip; <strong><code>( variable එක : f_school , data type එක : struct schools  )</code></strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;stdio.h&gt;</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">struct</span> schools{
</span></span><span style="display:flex;"><span>   <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> name;
</span></span><span style="display:flex;"><span>   <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> district;
</span></span><span style="display:flex;"><span>   <span style="color:#66d9ef">int</span> student_count;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>(){
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">struct</span> schools f_school;
</span></span><span style="display:flex;"><span>	f_school.name <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;St.thomas College&#34;</span>;
</span></span><span style="display:flex;"><span>	f_school.district <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;Matara&#34;</span>;
</span></span><span style="display:flex;"><span>	f_school.student_count <span style="color:#f92672">=</span> <span style="color:#ae81ff">6500</span>;
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">printf</span>(<span style="color:#e6db74">&#34;%s </span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>,f_school.name);
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">printf</span>(<span style="color:#e6db74">&#34;%s </span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>,f_school.district);
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">printf</span>(<span style="color:#e6db74">&#34;%d </span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>,f_school.student_count);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p><strong>output එක :</strong></p>
<ul>
<li>St.thomas College</li>
<li>Matara</li>
<li>6500</li>
</ul>
<p>ඒ වගේම අපිට පුළුවන් ඉහත අකාරයට initialize කර ගතපු data , පහත ඇති ආකාරයටත් වෙනස් කර ගැනීමට හැක</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-c" data-lang="c"><span style="display:flex;"><span><span style="color:#75715e">#include</span> <span style="color:#75715e">&lt;stdio.h&gt;</span><span style="color:#75715e">
</span></span></span><span style="display:flex;"><span><span style="color:#75715e"></span><span style="color:#66d9ef">struct</span> schools{
</span></span><span style="display:flex;"><span>   <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> name;
</span></span><span style="display:flex;"><span>   <span style="color:#66d9ef">char</span><span style="color:#f92672">*</span> district;
</span></span><span style="display:flex;"><span>   <span style="color:#66d9ef">int</span> student_count;
</span></span><span style="display:flex;"><span>};
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span><span style="color:#66d9ef">int</span> <span style="color:#a6e22e">main</span>(){
</span></span><span style="display:flex;"><span>	<span style="color:#66d9ef">struct</span> schools f_school <span style="color:#f92672">=</span> {
</span></span><span style="display:flex;"><span>        .name <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;St.thomas College&#34;</span>,
</span></span><span style="display:flex;"><span>        .district <span style="color:#f92672">=</span> <span style="color:#e6db74">&#34;Matara&#34;</span>,
</span></span><span style="display:flex;"><span>        .student_count <span style="color:#f92672">=</span> <span style="color:#ae81ff">6500</span>
</span></span><span style="display:flex;"><span>    };
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">printf</span>(<span style="color:#e6db74">&#34;%s </span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>,f_school.name);
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">printf</span>(<span style="color:#e6db74">&#34;%s </span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>,f_school.district);
</span></span><span style="display:flex;"><span>    <span style="color:#a6e22e">printf</span>(<span style="color:#e6db74">&#34;%d </span><span style="color:#ae81ff">\n</span><span style="color:#e6db74">&#34;</span>,f_school.student_count);
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>    <span style="color:#66d9ef">return</span> <span style="color:#ae81ff">0</span>;
</span></span><span style="display:flex;"><span>}
</span></span></code></pre></div><p>අදට එපමණයි , ජයවේවා !🤍</p>
]]></description>
      
        <media:thumbnail url="https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/f68cf413-ab00-41fc-82fe-0a175144bf20/dfoguih-b630d9e3-21fa-4901-879a-36ab310d0ac2.png/v1/fill/w_1095,h_730,q_70,strp/ninja_rabbit_02_by_darkwhite2981_dfoguih-pre.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7ImhlaWdodCI6Ijw9ODU0IiwicGF0aCI6IlwvZlwvZjY4Y2Y0MTMtYWIwMC00MWZjLTgyZmUtMGExNzUxNDRiZjIwXC9kZm9ndWloLWI2MzBkOWUzLTIxZmEtNDkwMS04NzlhLTM2YWIzMTBkMGFjMi5wbmciLCJ3aWR0aCI6Ijw9MTI4MCJ9XV0sImF1ZCI6WyJ1cm46c2VydmljZTppbWFnZS5vcGVyYXRpb25zIl19.u5-DDBhA9TYBaFQ5lM58TNm-3_3JgxaUjoWCbT4CBgU" />
      
    </item>
    
    
    
    <item>
      <title>Variables in C Language / සිංහල</title>
      <link>//localhost:1313/posts/2024-03-05-variables-in-c-language-sinhala/</link>
      <pubDate>Sat, 12 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/posts/2024-03-05-variables-in-c-language-sinhala/</guid>
      <description><![CDATA[<p>මේ  ලිපියෙන් කතා කරන්නෙ variables  ගැන ,</p>
<p>සරලව , අපි programme එකක් ලියද්දි variables යොදා ගන්නේ Computer memory එකේ අපිට අවශ්‍ය data store  ගැනීමට. පරිගනකෙයේ memory එක කිව්වම ඇවිල්ල විවිද type එකේ memory devices තියෙනවා , ඔයාල දන්නවා HARDDISK එක , RAM එක ඊළඟට ප්‍රමාණයෙන් පොඩි හැබැයි speed memory  කොටසක් වන memory registers .
හැබැයි variable එකක් create කර ගැනීමෙන් computer එකේ main memory එක ,එහෙමත් නැත්නම් ram එකේ අපිට අවශ්‍ය data ස්ටෝරේ කර ගැනීමක් තමයි වෙන්නේ .</p>
<p>අපි c වල variable එකක් create කරලා වැඩ පටන් ගන්න කලින් , C ගැන පොඩී දෙයක් දැනන්  ඕන , එක ඔයාට js python ruby ,php  වගේ background එකකින්  ආව නම් වැදගත් වෙනවා ,
අපි එක මෙහෙම කියමු , පරිගණක බාෂා නිර්මාණය කරල තියෙන විදිය හා  හැකියාවන් අනුව කොටස් වලට  තියෙනවා , උදාහරණයක් විදියට ගත්තොත් low level , high level functional languages සහා procedural language කියන එක . අන්න ඒ වගේම තව දෙයක් තමයි static type සහ dynamic type කියන්නෙත් .</p>
<p>ඉතින් මෙතැනදී static  type language waladi අපිට variable එකක් create කරද්දී memory එකේ කොච්චර ඉඩක් ගන්න ඕනද කියන එක ටිකක් සවිස්තරව කියන්න වෙනවා. ඒ වෙලාවට අපි දන්න pre-define data types list එකක් තියෙනවා නේ , අන්න ඒ ටික යොදා ගෙන variables create කර ගන්නවා .</p>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Networking Lessons / සිංහල</title>
      <link>//localhost:1313/networking_tuts/</link>
      <pubDate>Thu, 24 Feb 2022 17:51:42 +0000</pubDate>
      
      <guid>//localhost:1313/networking_tuts/</guid>
      <description><![CDATA[<p><a href="https://www.youtube.com/watch?v=GMWXqKZiyAI" title="Now in Android: 55"><img src="https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ_j4TXuiFOR8lWv602Nn3MD_-eac1kod-34FbgOwk-tQ&amp;s" alt="Now in Android: 55"></a></p>
<p>sdsdsd</p>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>Other</title>
      <link>//localhost:1313/other/</link>
      <pubDate>Thu, 24 Feb 2022 17:51:42 +0000</pubDate>
      
      <guid>//localhost:1313/other/</guid>
      <description><![CDATA[]]></description>
      
    </item>
    
    
    
    <item>
      <title>Google CrowdSource / සිංහල</title>
      <link>//localhost:1313/posts/2020-08-20-google-crowdsource/</link>
      <pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>//localhost:1313/posts/2020-08-20-google-crowdsource/</guid>
      <description><![CDATA[<h1 id="-google-ඉගන-ගනනතඅපන---">&quot; Google ඉගෙන ගන්නෙත් අපෙන් .. ! &quot;</h1>
<p><strong><code>Crowdsource</code></strong> සංකල්පයත් සමග ලෝකයේ වඩාත් ප්‍රචලිත Crowd-sourcing platform එකක් වන Google Crowdsource ගැන සරල සටහනක් මේ .. .ආරම්බයක් වශයෙන් ගත්කල ,2016 වසරේ අගෝස්තු මස Web &amp; Mobile Application එකක් වශයෙන් දියත් කල මෙම Google Crowd source Application එක හරහා Googleලගේ විවිද සේවාවන්ට අදාළ A.I Algorithms train කිරීම සිදුවෙනවා . ඉදිරියෙ පැවැත්වීමට නියමිත Google CrowdSorce event එකේදී මේ සම්බන්ද තවත් වැදගත් දේවල් දැන ගැනීමේ හැකියාව පවතින අතර මේ සම්බන්ද කුතුහලයක් තියෙන ඔබට ,Google play Store හරහා Download කර ගැනීමේ හැකියාව පවතිනවා .(ඒ වගේමයි website එක හරහා ද contribute කිරීමේ හැකියාව පවතිනවා -&gt; <a href="https://crowdsource.google.com/">https://crowdsource.google.com/</a>)</p>
<p>කලින් කිව්වා මේන් , play store එක හරහා Download කර ගැනීමෙන් හෝ Web Site එක භාවිතයෙන් හෝ මේ සදහා contribute කිරීමේ හැකියාව පවතින අතර , contribute කිරීමේදී පියවර කිහිපහයක් ඇත .කලින් කිව්වා මේන්, අපි මෙහෙදී සිදු කරන්නේ Googleලගේ සේවා නම්‍යශීලීව ක්‍රියාත්මක වීම සදහා බාවිතා වන AI algorithms train කරන එක . මොකක්ද මේ AI එකක් කියන්නේ ? මොකක්ද AI අල්ගොරිතම් එකක් සහ AI අල්ගොරිතම් එකක් train කරනවා කියන්නේ මොකක්ද ?.. crowd-source mobile හෝ web application එක බාවිතා කර contribute කරන්න කලින් මේ පිළිබද සරල අදහසක් තිබීම මම හිතනවා හොදයි කියල , ඒ දේත් එක්ක contribution එක කරගෙන යෑම ඉතාමත් වටිනවා ,AI ගැන සරලව කතා කලොත් අනිත් technologies වගේම AI වලත් එදාට වඩා ලොකු වෙනස් වීමක් එක්ක , වෙනස් වේවි යන ගමනක් තමයි තියෙන්නේ , එදා ai programmes එක දෙයක් , එක ක්‍රියාවක් සදහා පමණක් විශේෂකර නිර්මාණය කර තිබු අතර , එම ක්‍රියාව වීමේ සියලුම සම්බාවිතාවන් ගෙන එයින් තර්කානු කුලව වඩාත්ම හරි දේ ගන්න එක තමයි ඒ කාලේ AI Programmes වලට තිබුනේ ,නිශ්චිත මෙන්ම නිවැරදි සම්බාවිතාවන් එක්ක , මේ data සෙට් එක processකරන්න පුළුවන් හොද processing power එකක් තිබුන තැන අපේ මොලේට වැඩිය ඉක්මනට තර්කානු කුළ තීරණයක් ගන්න පුළුවන් කම තිබ්බ ,එත් කාලයත් එක්ක මේ කතාව වෙනස් වෙනවා ඒ Machine Learning , Deep learning Concepts එක්ක Artificial intelligent Neural Network සංකල්පේ පැමිණීමත් සමග යි .මෙහි විශේෂත්වය වන්නේ මේ Artificial intelligent neural network ඒකට හැකියාව තියෙනවා තමන්ට ලැබෙන data වලින් අද්දැකීම් ලබා ගන්න හරියට මිනිස්සු වගේ ..අපි ඉපදුන දවසේ ඉදල අපිට අපේ පරිසරයෙන් ඉන්ද්‍රියන් හරහා ලැබුණු දැනුමෙන් අපි ඉගෙන ගත්තා වගේ තමි , Artificial intelligent Neural Networks , Machine Learning — Deep learning techniques ඔස්සේ ඉගෙන ගන්නේ , කලින් කිව්වා වගේ එයාල train වෙන්නේ ලැබෙන data අනුව , data ගැන කතා කලොත් , එක දෙයකට අදාළ එකිනෙකට වෙනස් data සෙට්ස් එහෙමත් නැත්නම් මේකෙදි කතා වෙන data models එයාලට ලබා දෙන්න ඕන , එතකොට තමයි train වෙන්නේ එහෙමත් නැත්නම් අර කිව්වා වගේ අද්දැකීම් ලබා ගන්නේ .</p>
<p>ඉතින් Google crowdSource මගින්සිද්දකරන්නේද Google සමාගෙම machine Learning algorithms train කිරීම , විශේෂත්වය වන්නේ අපිටත් මෙහි කොටස්කරුවන් වීමේ හැකියාවයි , Google හි searching algorithms , language translation algorithms මෙන්ම Google map ඒකට අදාල algorithms train කිරීම සදහා අපිටද contribute කිරීමේ හැකියාව ලැබෙන අතර mobile Application හෝ web site එක බාවිතයෙන් ඔබට කුතුහලයක් ආශාවක් ඇත්නම් දැන්ම උනත් ආරම්භ කිරීමේ හැකියාව පවතිනවා.. Play Store එකෙන් download කරගැනීමෙන් හෝ crowd source websiteඑකෙන් contribute කිරීමේ හැකියාව පවතිනවා.</p>
<p><img src="https://media.geeksforgeeks.org/wp-content/uploads/20200423160500/image1-21.png" alt=""></p>
<p>ඉහත චායාරූප දෙකෙන් පෙන්වා ඇති පරිදි අපිට contribute කරන්න පුළුවන් categories කිහිපයක් තියෙන අතර් translation and translation validation, Landmark identification, and Handwriting recognition යන ඒවාට contribute කිරීම අපට රටක් වශයෙන් මහත් පිටුවහලක්වනවා , මොකද අපි දන්නවා අපේ මව් භාශාව එහෙමත් නැත්තම් සිංහල කතා කරන එකම රට අපි වන අතර අන්තර්ජාලයේ ඇතිවිවිද contents සිංහල බාශාවට පරිවර්තනය කිරීමේදී ඇතිවන දුර්වලතා මගහරවා ගැනීමේ හැකියාව පවතිනවා . එමෙන්ම ලංකාවේ ස්ථාන නාම බොහොමයක් සිංහල නාම වලින්ම බලාගැනීමේ හැකියාව වඩාත්දියණු කිරීමේ හැකියාව පවතිනවා .</p>
<p>ජයවේවා !🤍</p>
]]></description>
      
        <media:thumbnail url="https://i.ytimg.com/vi/zz9TxgBQ-sE/maxresdefault.jpg" />
      
    </item>
    
    
    
    
    
    
  </channel>
</rss>
